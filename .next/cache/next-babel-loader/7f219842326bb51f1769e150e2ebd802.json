{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\covid-19\\\\components\\\\lastUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useStats from \"../src/useStats\";\nexport default function Last(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  console.log(stats);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"No info\");\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Last Update: \", stats.recovered.state, \" \");\n}","map":{"version":3,"sources":["C:/fullstack/covid-19/components/lastUpdate.js"],"names":["useState","useEffect","useStats","Last","url","stats","loading","error","console","log","recovered","state"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAGA,eAAe,SAASC,IAAT,OAAqB;AAAA,MAANC,GAAM,QAANA,GAAM;;AAAA,kBACAF,QAAQ,CAACE,GAAD,CADR;AAAA,MACzBC,KADyB,aACzBA,KADyB;AAAA,MAClBC,OADkB,aAClBA,OADkB;AAAA,MACTC,KADS,aACTA,KADS;;AAEhCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACX,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBF,KAAK,CAACK,SAAN,CAAgBC,KAApC,MADJ;AAGH","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\n\r\n\r\nexport default function Last({url}) {\r\n    const {stats, loading, error} = useStats(url);\r\n    console.log(stats)\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <Typography variant=\"h6\" component=\"h6\" gutterBottom>No info</Typography>;\r\n    return (\r\n        <span>Last Update: {stats.recovered.state} </span>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}