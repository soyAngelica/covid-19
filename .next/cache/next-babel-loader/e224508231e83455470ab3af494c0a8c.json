{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\covid-19\\\\components\\\\Stats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useStats from \"../src/useStats\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from '../src/theme';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      minHeight: 235\n    }\n  };\n});\nexport default function Stats(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var classes = useStyles();\n  if (loading) return __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Loading...\"));\n  if (error) return __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"No data\")); // {error.message.split('not')[0]}\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Confirmados\"), __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, stats.confirmed.value), __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Muertos\"), __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, stats.deaths.value), __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Curados\"), __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, stats.recovered.value)));\n}","map":{"version":3,"sources":["C:/fullstack/covid-19/components/Stats.js"],"names":["useState","useEffect","useStats","makeStyles","ThemeProvider","theme","Typography","Paper","useStyles","margin","spacing","paper","padding","textAlign","color","palette","text","secondary","minHeight","Stats","url","stats","loading","error","classes","confirmed","value","deaths","recovered"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        minHeight: 235\r\n      },\r\n\r\n}));\r\nexport default function Stats({url}) {\r\n    const {stats, loading, error} = useStats(url);\r\n    const classes = useStyles();\r\n\r\n    if (loading) return <Paper className={classes.paper}><Typography variant=\"h6\" component=\"h6\" gutterBottom>Loading...</Typography></Paper>;\r\n    if (error) return <Paper className={classes.paper}><Typography variant=\"h6\" component=\"h6\" gutterBottom>No data</Typography></Paper>\r\n    // {error.message.split('not')[0]}\r\n  \r\n    return (\r\n        <React.Fragment>\r\n             <Paper  className={classes.paper} >                        \r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Confirmados\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    {stats.confirmed.value}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Muertos\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    {stats.deaths.value}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Curados\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    {stats.recovered.value}\r\n                </Typography>\r\n            </Paper>\r\n      </React.Fragment>\r\n                \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}