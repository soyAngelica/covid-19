{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    console.log('Mounting or updating');\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              console.log('Fetching Data');\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                setError(err);\n              }));\n\n            case 5:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["C:/fullstack/covid-19/src/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","console","log","fetchData","fetch","then","res","json","err","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAENL,QAAQ,CAAC,IAAD,CAFF;AAAA,MAE7BM,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGVP,QAAQ,EAHE;AAAA,MAG7BQ,KAH6B;AAAA,MAGtBC,QAHsB;;AAIpCR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEL,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AACRC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAHF;AAAA,+CAIqBE,KAAK,CAACV,GAAD,CAAL,CAChBW,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,WAEV,UAAAC,GAAG,EAAI;AACZR,gBAAAA,QAAQ,CAACQ,GAAD,CAAR;AACD,eAJgB,CAJrB;;AAAA;AAIQC,cAAAA,IAJR;AASEb,cAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYAK,IAAAA,SAAS;AACV,GAfQ,EAeN,CAACT,GAAD,CAfM,CAAT;AAgBA,SAAO;AACLC,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,OAAO,EAAPA,OAFK;AAGLE,IAAAA,KAAK,EAALA;AAHK,GAAP;AAKD","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useStats(url) {\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n  useEffect(() => {\r\n    console.log('Mounting or updating');\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      setError();\r\n      console.log('Fetching Data');\r\n      const data = await fetch(url)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n          setError(err);\r\n        });\r\n      setStats(data);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return {\r\n    stats,\r\n    loading,\r\n    error,\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}