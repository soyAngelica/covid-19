{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\covid-19\\\\components\\\\CountrySelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useStats from \"../src/useStats\";\nimport Stats from \"../components/Stats\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from '../src/theme';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nvar emojiFlags = require('emoji-flags');\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n      position: 'inherit',\n      margin: '0px auto'\n    }\n  },\n  input: {\n    margin: `${theme.spacing(3)}px auto`,\n    width: '100%',\n    display: 'block',\n    borderRadius: 4,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function CountrySelector() {\n  const classes = useStyles();\n  const {\n    stats: countries,\n    loading,\n    error\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('MX');\n  const [emoji, setSelectedEmoji] = emojiFlags.countryCode(selectedCountry);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, console.log(emoji), __jsx(NativeSelect, {\n    id: \"demo-customized-select-native\",\n    input: __jsx(BootstrapInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    onChange: e => {\n      setSelectedCountry(e.target.value), setSelectedEmoji(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, code]) => {\n    return __jsx(\"option\", {\n      selected: selectedCountry === code,\n      key: code,\n      value: countries.iso3[code],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, countries.iso3[code], \" - \", country);\n  })), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" \"));\n}","map":{"version":3,"sources":["C:/fullstack/covid-19/components/CountrySelect.js"],"names":["useState","useEffect","useStats","Stats","makeStyles","withStyles","ThemeProvider","theme","Grid","Select","NativeSelect","InputBase","emojiFlags","require","BootstrapInput","root","marginTop","spacing","position","margin","input","width","display","borderRadius","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","CountrySelector","classes","stats","countries","loading","error","selectedCountry","setSelectedCountry","emoji","setSelectedEmoji","countryCode","console","log","e","target","value","Object","entries","map","country","code","iso3"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\nimport Stats from \"../components/Stats\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\n\r\nvar emojiFlags = require('emoji-flags');\r\n\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n        position:'inherit',\r\n        margin: '0px auto'\r\n      },\r\n    },\r\n    input: {\r\n      margin: `${theme.spacing(3)}px auto`,\r\n      width: '100%',\r\n      display: 'block',\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      padding: '10px 26px 10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:focus': {\r\n        borderRadius: 4,\r\n        borderColor: '#80bdff',\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  const useStyles = makeStyles(theme => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport default function CountrySelector() {\r\n    const classes = useStyles();\r\n    const {stats: countries, loading, error} = useStats('https://covid19.mathdro.id/api/countries');\r\n    const [selectedCountry, setSelectedCountry] = useState('MX');\r\n    const [emoji, setSelectedEmoji] = emojiFlags.countryCode(selectedCountry);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error...</p>;\r\n    \r\n    return (\r\n        <Grid item xs={12}>\r\n            {console.log(emoji)}\r\n            <NativeSelect  id=\"demo-customized-select-native\"  input={<BootstrapInput />} onChange={(e) => {setSelectedCountry(e.target.value), setSelectedEmoji(e.target.value) }}>\r\n                    {Object.entries(countries.countries).map(([country, code]) => {\r\n                        return (\r\n                            <option selected={selectedCountry === code} key={code} value={countries.iso3[code]}>\r\n                               {countries.iso3[code]} - {country}\r\n                            </option>\r\n                        )\r\n                    })}\r\n            </NativeSelect >\r\n            <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}> </Stats>\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}