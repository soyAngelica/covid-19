{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\covid-19\\\\components\\\\Stats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useStats from \"../src/useStats\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from '../src/theme';\nimport Typography from '@material-ui/core/Typography';\nexport default function Stats({\n  url\n}) {\n  const {\n    stats,\n    loading,\n    error\n  } = useStats(url);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"No data\"); // {error.message.split('not')[0]}\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Confirmados\"), __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, stats.confirmed.value), __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Muertos\"), __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, stats.deaths.value), __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Curados\"), __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, stats.recovered.value)));\n}","map":{"version":3,"sources":["C:/fullstack/covid-19/components/Stats.js"],"names":["useState","useEffect","useStats","makeStyles","ThemeProvider","theme","Typography","Stats","url","stats","loading","error","classes","paper","confirmed","value","deaths","recovered"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAKA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAsB;AACjC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BT,QAAQ,CAACM,GAAD,CAAxC;AAEA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP,CAJsB,CAKjC;;AAEA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAC,KAAD;AAAQ,IAAA,SAAS,EAAEC,OAAO,CAACC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFH,EAKG,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACK,SAAN,CAAgBC,KADrB,CALH,EAQG,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARH,EAWG,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,MAAN,CAAaD,KADlB,CAXH,EAcG,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdH,EAiBG,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACQ,SAAN,CAAgBF,KADrB,CAjBH,CADL,CADJ;AA0BH","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\nexport default function Stats({url}) {\r\n    const {stats, loading, error} = useStats(url);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <Typography variant=\"h6\" component=\"h6\" gutterBottom>No data</Typography>\r\n    // {error.message.split('not')[0]}\r\n  \r\n    return (\r\n        <React.Fragment>\r\n             <Paper  className={classes.paper} >\r\n                        \r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Confirmados\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    {stats.confirmed.value}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Muertos\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    {stats.deaths.value}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Curados\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                    {stats.recovered.value}\r\n                </Typography>\r\n            </Paper>\r\n      </React.Fragment>\r\n                \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}