{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\fullstack\\\\covid-19\\\\components\\\\CountrySelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useStats from \"../src/useStats\";\nimport Stats from \"../components/Stats\";\nimport Last from \"../components/lastUpdate\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from '../src/theme';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport ReactCountryFlag from \"react-country-flag\";\nvar BootstrapInput = withStyles(function (theme) {\n  return {\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n        position: 'inherit',\n        margin: '0px auto'\n      }\n    },\n    input: {\n      margin: \"\".concat(theme.spacing(3), \"px\"),\n      width: '100%',\n      display: 'block',\n      borderRadius: 4,\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n      }\n    }\n  };\n})(InputBase);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nexport default function CountrySelector() {\n  var classes = useStyles();\n\n  var _useStats = useStats('https://covid19.mathdro.id/api/countries'),\n      countries = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var _useState = useState('MX'),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(ReactCountryFlag, {\n    countryCode: selectedCountry,\n    svg: true,\n    style: {\n      width: '3em',\n      height: '3em',\n      marginLeft: '3em'\n    },\n    title: selectedCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(NativeSelect, {\n    id: \"demo-customized-select-native\",\n    input: __jsx(BootstrapInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }),\n    onChange: function onChange(e) {\n      setSelectedCountry(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    return __jsx(\"option\", {\n      selected: selectedCountry === code,\n      key: code,\n      value: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, countries.iso3[code], \" - \", country);\n  })), __jsx(Stats, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(Last, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/fullstack/covid-19/components/CountrySelect.js"],"names":["useState","useEffect","useStats","Stats","Last","makeStyles","withStyles","ThemeProvider","theme","Grid","Select","NativeSelect","InputBase","ReactCountryFlag","BootstrapInput","root","marginTop","spacing","position","margin","input","width","display","borderRadius","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","CountrySelector","classes","countries","stats","loading","error","selectedCountry","setSelectedCountry","height","marginLeft","e","target","value","Object","entries","map","country","code","iso3"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\nimport Stats from \"../components/Stats\";\r\nimport Last from \"../components/lastUpdate\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport ReactCountryFlag from \"react-country-flag\"\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n        position:'inherit',\r\n        margin: '0px auto'\r\n      },\r\n    },\r\n   \r\n    input: {\r\n      margin: `${theme.spacing(3)}px`,\r\n      width: '100%',\r\n      display: 'block',\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      padding: '10px 26px 10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:focus': {\r\n        borderRadius: 4,\r\n        borderColor: '#80bdff',\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  const useStyles = makeStyles(theme => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CountrySelector() {\r\n    const classes = useStyles();\r\n    const {stats: countries, loading, error} = useStats('https://covid19.mathdro.id/api/countries');\r\n    const [selectedCountry, setSelectedCountry] = useState('MX');\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error...</p>;\r\n    \r\n    return (\r\n        <Grid item xs={12}>\r\n            <ReactCountryFlag \r\n                 countryCode={selectedCountry}\r\n                svg\r\n                style={{\r\n                    width: '3em',\r\n                    height: '3em',\r\n                    marginLeft: '3em'\r\n                }}\r\n                title={selectedCountry}\r\n            />\r\n            <NativeSelect  id=\"demo-customized-select-native\"  input={<BootstrapInput />} onChange={(e) => {setSelectedCountry(e.target.value)}}>\r\n                    {Object.entries(countries.countries).map(([country, code]) => {\r\n                        \r\n                        return (\r\n                            <option selected={selectedCountry === code} key={code} value={code}>\r\n                               {countries.iso3[code]} - {country} \r\n                            </option>\r\n                        )\r\n                    })}\r\n            </NativeSelect >\r\n            <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}></Stats>\r\n            <Last url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`} />\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}