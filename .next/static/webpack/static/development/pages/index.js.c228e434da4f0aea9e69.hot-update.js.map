{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c228e434da4f0aea9e69.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport Document, { Head, Main, NextScript } from 'next/document';\r\nimport { ServerStyleSheets } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from '../src/theme';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Box from '@material-ui/core/Box';\r\nimport { bgcolor } from '@material-ui/system';\r\nimport Stats from \"../components/Stats\";\r\nimport CountrySelector from \"../components/CountrySelect\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        background: '',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: '#FFF',\r\n        background: 'linear-gradient(45deg, #654ea3 30%, #eaafc8 90%)'\r\n    },\r\n    last: {\r\n        padding: theme.spacing(3),\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Index() {\r\n    const classes = useStyles();\r\n    return (\r\n        <html lang=\"es\">\r\n            <Head>\r\n            <meta name=\"theme-color\" content={theme.palette.primary.main} />\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n            />\r\n            </Head>\r\n            <body>\r\n                <div style={{background:'linear-gradient(45deg, #373B44 30%, #4286f4 90%)', minHeight:'100vh'}}>\r\n            <ThemeProvider theme={theme}>\r\n                <Container maxWidth=\"sm\"  className={classes.container}>\r\n                <Typography variant=\"h5\" component=\"h5\"  align=\"center\" gutterBottom=\"true\">\r\n                    <Box className={classes.last} color=\"primary.main\">\r\n                        COVID-19 CORONAVIRUS WORLD DATA <span role=\"img\" aria-label=\"sheep\">ðŸ¦ </span>\r\n                    </Box>\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Paper  className={classes.paper} >\r\n                            <Stats url={'https://covid19.mathdro.id/api'}></Stats>\r\n                        </Paper>\r\n                    </Grid>           \r\n                </Grid>\r\n                <CountrySelector></CountrySelector>\r\n            </Container>\r\n            </ThemeProvider>\r\n        </div>\r\n            </body>\r\n        </html>\r\n    )\r\n}\r\n\r\n\r\n\r\nIndex.getInitialProps = async ctx => {\r\n    // Resolution order\r\n    //\r\n    // On the server:\r\n    // 1. app.getInitialProps\r\n    // 2. page.getInitialProps\r\n    // 3. document.getInitialProps\r\n    // 4. app.render\r\n    // 5. page.render\r\n    // 6. document.render\r\n    //\r\n    // On the server with error:\r\n    // 1. document.getInitialProps\r\n    // 2. app.render\r\n    // 3. page.render\r\n    // 4. document.render\r\n    //\r\n    // On the client\r\n    // 1. app.getInitialProps\r\n    // 2. page.getInitialProps\r\n    // 3. app.render\r\n    // 4. page.render\r\n  \r\n    // Render app and page and get the context of the page with collected side effects.\r\n    const sheets = new ServerStyleSheets();\r\n    const originalRenderPage = ctx.renderPage;\r\n  \r\n    ctx.renderPage = () =>\r\n      originalRenderPage({\r\n        enhanceApp: App => props => sheets.collect(<App {...props} />),\r\n      });\r\n  \r\n    const initialProps = await Document.getInitialProps(ctx);\r\n  \r\n    return {\r\n      ...initialProps,\r\n      // Styles fragment is rendered after the app and page rendering finish.\r\n      styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\r\n    };\r\n  };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAVA;AAAA;AAigCA;AAhCA;AAoCA;AACA;AArCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}