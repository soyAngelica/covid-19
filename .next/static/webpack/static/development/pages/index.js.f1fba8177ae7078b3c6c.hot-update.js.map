{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f1fba8177ae7078b3c6c.hot-update.js","sources":["webpack:///./components/Stats.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    format: {\r\n        color: '#FFF'\r\n    }\r\n}));\r\n\r\nexport default function Stats({url}) {\r\n    const classes = useStyles();\r\n    const {stats, loading, error} = useStats(url);\r\n    if (loading) return <Typography variant=\"h6\" component=\"h6\" gutterBottom>Loading...</Typography>\r\n    if (error) return   <Typography variant=\"h6\" component=\"h6\" gutterBottom>No data</Typography>\r\n    // {error.message.split('not')[0]}\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.format}>\r\n                Confirmados\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.format}>\r\n                {stats.confirmed.value}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.format}>\r\n                Muertos\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.format}>\r\n                {stats.deaths.value}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.format}>\r\n                Curados\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.format}>\r\n                {stats.recovered.value}\r\n            </Typography>\r\n      </React.Fragment>\r\n                \r\n    );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}