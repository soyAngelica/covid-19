{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a25504730235677b37a4.hot-update.js","sources":["webpack:///./components/CountrySelect.js","webpack:///./node_modules/react-country-flag/dist/index.es.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport useStats from \"../src/useStats\";\r\nimport Stats from \"../components/Stats\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from '../src/theme';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport ReactCountryFlag from \"react-country-flag\"\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n        position:'inherit',\r\n        margin: '0px auto'\r\n      },\r\n    },\r\n    input: {\r\n      margin: `${theme.spacing(3)}px auto`,\r\n      width: '100%',\r\n      display: 'block',\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      padding: '10px 26px 10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:focus': {\r\n        borderRadius: 4,\r\n        borderColor: '#80bdff',\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      },\r\n    },\r\n  }))(InputBase);\r\n  \r\n  const useStyles = makeStyles(theme => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport default function CountrySelector() {\r\n    const classes = useStyles();\r\n    const {stats: countries, loading, error} = useStats('https://covid19.mathdro.id/api/countries');\r\n    const [selectedCountry, setSelectedCountry] = useState('MX');\r\n    const emoji = (selectedCountry) => {\r\n        const flag = emojiFlags.countryCode(selectedCountry);\r\n        console.log(flag);\r\n    }\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error...</p>;\r\n    \r\n    return (\r\n        <Grid item xs={12}>\r\n            <ReactCountryFlag code={selectedCountry} />\r\n            <NativeSelect  id=\"demo-customized-select-native\"  input={<BootstrapInput />} onChange={(e) => {setSelectedCountry(e.target.value), emoji(e.target.value) }}>\r\n                    {Object.entries(countries.countries).map(([country, code]) => {\r\n                        return (\r\n                            <option selected={selectedCountry === code} key={code} value={countries.iso3[code]}>\r\n                               {countries.iso3[code]} - {country}\r\n                            </option>\r\n                        )\r\n                    })}\r\n            </NativeSelect >\r\n            <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}> </Stats>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar DEFAULT_CDN_URL = 'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/';\nvar DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nvar OFFSET = 127397;\n\nfunction ReactCountryFlag(_ref) {\n    var cdnSuffix = _ref.cdnSuffix,\n        cdnUrl = _ref.cdnUrl,\n        countryCode = _ref.countryCode,\n        style = _ref.style,\n        svg = _ref.svg,\n        props = objectWithoutProperties(_ref, ['cdnSuffix', 'cdnUrl', 'countryCode', 'style', 'svg']);\n\n    if (typeof countryCode !== 'string') {\n        return null;\n    }\n\n    if (svg) {\n        var flagUrl = '' + cdnUrl + countryCode.toLowerCase() + '.' + DEFAULT_CDN_SUFFIX;\n\n        return React.createElement('img', _extends({}, props, {\n            src: flagUrl,\n            style: _extends({\n                display: 'inline-block',\n                width: '1em',\n                height: '1em',\n                verticalAlign: 'middle'\n            }, style)\n        }));\n    }\n\n    var emoji = countryCode.toUpperCase().replace(/./g, function (char) {\n        return String.fromCodePoint(char.charCodeAt(0) + OFFSET);\n    });\n\n    return React.createElement(\n        'span',\n        _extends({\n            role: 'img'\n        }, props, {\n            style: _extends({\n                display: 'inline-block',\n                fontSize: '1em',\n                lineHeight: '1em',\n                verticalAlign: 'middle'\n            }, style)\n        }),\n        emoji\n    );\n}\n\nReactCountryFlag.propTypes = {\n    cdnUrl: PropTypes.string,\n    countryCode: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    svg: PropTypes.bool\n};\n\nReactCountryFlag.defaultProps = {\n    cdnUrl: DEFAULT_CDN_URL,\n    svg: false\n};\n\nexport default ReactCountryFlag;\n//# sourceMappingURL=index.es.js.map\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AAHA;AAvBA;AARA;AAAA;AAuCA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;ACpsourceRoot":""}